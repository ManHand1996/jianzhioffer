
"""
难度:中等
假设把某股票的价格按照时间先后顺序存储在数组中，请问买卖该股票一次可能获得的最大利润是多少？
示例 1:

输入: [7,1,5,3,6,4]
输出: 5
解释: 在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。
     注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格。
示例 2:

输入: [7,6,4,3,1]
输出: 0
解释: 在这种情况下, 没有交易完成, 所以最大利润为 0。
 

限制：

0 <= 数组长度 <= 10^5
"""

def maxProfit(self, prices: list[int]) -> int:
    """
    动态规划:
    如果在第i天卖出, 并且想知道是否为最大利润
    则需要在前i-1天中找到买入的最小值min(i-1)
    并且需要知道第i-1天卖出的利润
    比较 第i-1天的利润 与 第i天价格 - min(i-1) 
    
    f(i) = max(f(i-1), prices[i]-min(i-1))
    f(0) = 0 (只有买入)
    """
    
    x = 0
    m = float("inf")
    for price in prices:
        m = min(m, price)
        x = max(x, price - m)
        
    
    return x
