def numWays(n: int) -> int:
    """
    找出1和2, 组合成n的可能性数量
    排列组合: 不同顺序也算是一种可能
   
    设置n能被2整除次数(跳2级最多可以跳多少次) 为 c
    0<= c <= n/2(取整)
    总位数: x = n-2*c + c
    从0-n/2遍历 ,累加各个情况的排列组合数量f(x,c)
    
    如n = 5,
    则有以下组合:
    组合          排列顺序
    [2,2,1]        3 f(3,2)
    [2,1,1,1]      4 f(4,1)
    [1,1,1,1,1]    1 f(5,0)
    """
    c = n//2
    r = 0
    for i in range(c+1):
        x = n-2*i + i
        p = 1
        q = 1
        for j in range(i):
            p *= x-j
            q *= j+1
        r += p//q
    return r % (10**9+7)